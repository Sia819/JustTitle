<Window x:Class="WindowTitleControl.TestWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WindowTitleControl"
        mc:Ignorable="d"
        Title="TestWindow" Height="400" Width="350">
    <Window.Resources>
        <Style x:Key="Minimize_Path_Style" TargetType="{x:Type Path}">
            <Setter Property="Data" Value="M0,0 9,0"/>
            <Setter Property="Fill" Value="Transparent"/>
            <Setter Property="Height" Value="10"/>
            <Setter Property="Stretch" Value="Fill"/>
            <Setter Property="Stroke" Value="Black"/>
            <Setter Property="Width" Value="10"/>
        </Style>
        <Style x:Key="Maximize_Path_Style" TargetType="{x:Type Path}">
            <Setter Property="Data" Value="M0,0 10,0 10,10 0,10 z"/>
            <Setter Property="Fill" Value="Transparent"/>
            <Setter Property="Height" Value="10"/>
            <Setter Property="Stretch" Value="Fill"/>
            <Setter Property="Stroke" Value="Black"/>
            <Setter Property="Width" Value="10"/>
        </Style>
        <Style x:Key="Maximized_Path_Style" TargetType="{x:Type Path}">
            <Setter Property="Data" Value="M2,2 2,0 9,0 9,7 7,7 7,9 0,9 0,2 7,2 7,7"/>
            <Setter Property="Fill" Value="Transparent"/>
            <Setter Property="Height" Value="10"/>
            <Setter Property="Stretch" Value="Fill"/>
            <Setter Property="Stroke" Value="Black"/>
            <Setter Property="Width" Value="10"/>
        </Style>
        <Style x:Key="Close_Path_Style(TopLeft)" TargetType="{x:Type Path}">
            <!--Data="M1169 1024l879 -879l-145 -145l-879 879l-879 -879l-145 145l879 879l-879 879l145 145l879 -879l879 879l145 -145z"-->
            <!--Data="M0,0 3,0 14,11 25,0 28,0 28,3 17,14 28,25 28,28 25,28 14,17 3,28 0,28 0,25 11,14 0,3 z"--> <!-- 29px * 29px (두꺼움) -->
            <!--Data="M0,0 1,0 5,4, 6,4 10,0 11,0 11,1 7,5 7,6 11,10 11,11 10,11 6,7 5,7 1,11 0,11 0,10 4,6 4,5 0,1 z"--> <!-- 12px * 12px (두꺼움) -->
            <!--Data="M0,0 1,0 5.5,4.5, 10,0 11,0 11,1 6.5,5.5 7,6 11,10 11,11 10,11 5.5,6.5 5,7 1,11 0,11 0,10 4.5,5.5 0,1 z"--> <!-- 가운데 겹치는거 깎음 -->
            <Setter Property="Data" Value="M0,0 0.7,0 5,4.3 9.3,0 L10,0 10,0.7 5.7,5 10,9.3 L10,10 9.3,10 5,5.7 0.7,10 L0,10 0,9.3 4.3,5 0,0.7 z"/>
            <Setter Property="Fill" Value="Black"/>
            <Setter Property="Height" Value="10"/>
            <Setter Property="Stretch" Value="None"/>
            <Setter Property="Stroke" Value="Transparent"/>
            <Setter Property="Width" Value="10"/>
            <Setter Property="Margin" Value="17 9 0 0"/>
            <Setter Property="StrokeThickness" Value="0"/>
        </Style>
        
        <SolidColorBrush x:Name="TitleStrokeColor_Default" x:Key="TitleStrokeColor_Default" Color="Black"/>
        <SolidColorBrush x:Name="TitleStrokeColor_MouseOver" x:Key="TitleStrokeColor_MouseOver" Color="White"/>
    </Window.Resources>


    <ScrollViewer>
        <StackPanel Orientation="Vertical">
            <Button Height="29" 
                    Width="45"
                    BorderThickness="0"
                    Background="White"
                    Foreground="Red"
                    VerticalAlignment="Top"
                    HorizontalAlignment="Left"
                    VerticalContentAlignment="Top"
                    HorizontalContentAlignment="Left"
                    >
                <Path x:Name="_" Style="{StaticResource Close_Path_Style(TopLeft)}"/>

            </Button>

            <TextBlock TextWrapping="WrapWithOverflow">
                (Path)(Button.Content).Fill 을 설정하려고 했지만, <LineBreak/>
                대부분의 방법이 Content를 변경하려고 할 때 그 Content의 속성에 접근하는방법이 아니라, 그 Content 자체를 치환해버리는 방법을 사용하는 듯 하다.
            </TextBlock>

            <Button>
                <Button.Resources>
                    <!-- 트리거 동작에 따라, Button.Content 가 StaticResource인 CheckBox로 치환됩니다. -->
                    <CheckBox x:Key="Local_MouseOverContent" Content="Mouse is over" />
                </Button.Resources>
                <Button.Style>
                    <Style TargetType="{x:Type Button}">
                        <Setter Property="Content" Value="No mouse over" />
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Content" Value="{StaticResource Local_MouseOverContent}" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>

            <!-- Content Template로 사용하기 -->
            <Button>
                <Button.Style>
                    <Style TargetType="{x:Type Button}">
                        <!-- Content는 string object "No mouse over"입니다. -->
                        <Setter Property="Content" Value="No mouse over" />
                        <Style.Triggers>
                            <!-- IsMouseOver값이 참인 경우 아래의 동작을 수행합니다. -->
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="ContentTemplate">
                                    <Setter.Value>
                                        <!-- Trigger작동시 Content는 아래 DataTemplate 내용으로 변경됩니다. -->
                                        <DataTemplate DataType="Button">
                                            <CheckBox Content="Mouse is over" />
                                        </DataTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>

            <Button Height="20">
                <Button.Style>
                    <Style TargetType="{x:Type Button}">
                        <Setter Property="Content" Value="No mouse over" />
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <!-- Button.Content.Fill 을 Red로 변경 -->
                                <Setter Property="Background" Value="Red" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
                <Rectangle x:Name="ButtonRect" Height="10" Width="10" Fill="{Binding Background, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}"/>

            </Button>

            <StackPanel>
                <StackPanel.Resources>
                    <Style TargetType="{x:Type Rectangle}">
                        <Setter Property="Fill" Value="Black"/>
                    </Style>

                    <Style x:Key="btnStyle1" TargetType="{x:Type Button}">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Rectangle x:Name="ButtonRect2" Height="10" Width="10" Fill="{TemplateBinding Background}" />
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="Content" Value="No mouse over" />

                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <!-- Button.Content.Fill 을 Red로 변경 -->
                                <!--<Setter Property="Background" Value="Red" />-->
                                <Setter Property="Background" Value="Red"/>
                                <Setter Property="Foreground" Value="Blue"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </StackPanel.Resources>
            </StackPanel>

            <Button Height="20">


            </Button>
            <Path Data="M210.66667,52.373333" Fill="#FFF4F4F5" Height="100" Stretch="Fill" Stroke="Black" Width="1"/>

        </StackPanel>
    </ScrollViewer>
</Window>

    